; Auto-generated. Do not edit!


(cl:in-package billiards_msgs-msg)


;//! \htmlinclude GetTableStateResult.msg.html

(cl:defclass <GetTableStateResult> (roslisp-msg-protocol:ros-message)
  ((state
    :reader state
    :initarg :state
    :type billiards_msgs-msg:TableState
    :initform (cl:make-instance 'billiards_msgs-msg:TableState)))
)

(cl:defclass GetTableStateResult (<GetTableStateResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <GetTableStateResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'GetTableStateResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name billiards_msgs-msg:<GetTableStateResult> is deprecated: use billiards_msgs-msg:GetTableStateResult instead.")))

(cl:ensure-generic-function 'state-val :lambda-list '(m))
(cl:defmethod state-val ((m <GetTableStateResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader billiards_msgs-msg:state-val is deprecated.  Use billiards_msgs-msg:state instead.")
  (state m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <GetTableStateResult>) ostream)
  "Serializes a message object of type '<GetTableStateResult>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'state) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <GetTableStateResult>) istream)
  "Deserializes a message object of type '<GetTableStateResult>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'state) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<GetTableStateResult>)))
  "Returns string type for a message object of type '<GetTableStateResult>"
  "billiards_msgs/GetTableStateResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'GetTableStateResult)))
  "Returns string type for a message object of type 'GetTableStateResult"
  "billiards_msgs/GetTableStateResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<GetTableStateResult>)))
  "Returns md5sum for a message object of type '<GetTableStateResult>"
  "70508e5dfcc8c4be58259ff6bdc4ab36")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'GetTableStateResult)))
  "Returns md5sum for a message object of type 'GetTableStateResult"
  "70508e5dfcc8c4be58259ff6bdc4ab36")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<GetTableStateResult>)))
  "Returns full string definition for message of type '<GetTableStateResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%TableState state~%~%================================================================================~%MSG: billiards_msgs/TableState~%BallState[] balls~%~%================================================================================~%MSG: billiards_msgs/BallState~%int8                  id                  # id of the ball~%                                          # 0-cue ball, 1-15 for each of the 15 balls~%bool                  pocketed            # false if ball is on the table~%geometry_msgs/PointStamped   point        # location of each ball~%int8                  group_id            # if we want to group the ball~%~%================================================================================~%MSG: geometry_msgs/PointStamped~%# This represents a Point with reference coordinate frame and timestamp~%Header header~%Point point~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.secs: seconds (stamp_secs) since epoch~%# * stamp.nsecs: nanoseconds since stamp_secs~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'GetTableStateResult)))
  "Returns full string definition for message of type 'GetTableStateResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%TableState state~%~%================================================================================~%MSG: billiards_msgs/TableState~%BallState[] balls~%~%================================================================================~%MSG: billiards_msgs/BallState~%int8                  id                  # id of the ball~%                                          # 0-cue ball, 1-15 for each of the 15 balls~%bool                  pocketed            # false if ball is on the table~%geometry_msgs/PointStamped   point        # location of each ball~%int8                  group_id            # if we want to group the ball~%~%================================================================================~%MSG: geometry_msgs/PointStamped~%# This represents a Point with reference coordinate frame and timestamp~%Header header~%Point point~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.secs: seconds (stamp_secs) since epoch~%# * stamp.nsecs: nanoseconds since stamp_secs~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <GetTableStateResult>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'state))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <GetTableStateResult>))
  "Converts a ROS message object to a list"
  (cl:list 'GetTableStateResult
    (cl:cons ':state (state msg))
))
